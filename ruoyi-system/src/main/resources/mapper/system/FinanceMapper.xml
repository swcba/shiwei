<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.FinanceMapper">
    
    <resultMap type="Finance" id="FinanceResult">
        <result property="financeId"    column="finance_id"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="finIncome"    column="fin_income"    />
        <result property="finExpenditure"    column="fin_expenditure"    />
    </resultMap>

    <sql id="selectFinanceVo">
        select finance_id, create_by, create_time, update_time, update_by, del_flag, fin_income, fin_expenditure from finance
    </sql>

    <select id="selectFinanceList" parameterType="Finance" resultMap="FinanceResult">
        <include refid="selectFinanceVo"/>
        <where>  
            <if test="finIncome != null "> and fin_income = #{finIncome}</if>
            <if test="finExpenditure != null "> and fin_expenditure = #{finExpenditure}</if>
        </where>
    </select>
    
    <select id="selectFinanceById" parameterType="Long" resultMap="FinanceResult">
        <include refid="selectFinanceVo"/>
        where finance_id = #{financeId}
    </select>
        
    <insert id="insertFinance" parameterType="Finance" useGeneratedKeys="true" keyProperty="financeId">
        insert into finance
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="delFlag != null">del_flag,</if>
            <if test="finIncome != null">fin_income,</if>
            <if test="finExpenditure != null">fin_expenditure,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="delFlag != null">#{delFlag},</if>
            <if test="finIncome != null">#{finIncome},</if>
            <if test="finExpenditure != null">#{finExpenditure},</if>
         </trim>
    </insert>

    <update id="updateFinance" parameterType="Finance">
        update finance
        <trim prefix="SET" suffixOverrides=",">
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="finIncome != null">fin_income = #{finIncome},</if>
            <if test="finExpenditure != null">fin_expenditure = #{finExpenditure},</if>
        </trim>
        where finance_id = #{financeId}
    </update>

    <delete id="deleteFinanceById" parameterType="Long">
        delete from finance where finance_id = #{financeId}
    </delete>

    <delete id="deleteFinanceByIds" parameterType="String">
        delete from finance where finance_id in 
        <foreach item="financeId" collection="array" open="(" separator="," close=")">
            #{financeId}
        </foreach>
    </delete>

</mapper>